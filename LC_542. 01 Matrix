Distance of Nearest Cell having 1
Problem Statement: Given a binary grid of N*M. Find the distance of the nearest 1 in the grid for each cell.

The distance is calculated as |i1  – i2| + |j1 – j2|, where i1, j1 are the row number and column number of the current cell, and i2, j2 are the row number and column number of the nearest cell having value 1.


Solution - 
class Node{
  int first;
  int second;
  int third;
  Node(int first,int second,int third){
    this.first = first;
    this.second = second;
    this.third = third;
  }
}
class Solution {
    public int[][] updateMatrix(int[][] mat) {
      int n = mat.length;
      int m = mat[0].length;
      int vis[][] = new int[n][m];
      int dist[][] = new int[n][m];
      Queue<Node> q = new LinkedList<>();
      for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
          if(mat[i][j]==0){
             q.add(new Node(i,j,0));
             vis[i][j] = 1;
          }else{
              vis[i][j] = 0;
          }
        }
      }
      int delrow[] = {-1, 0, +1, 0}; 
	    int delcol[] = {0, +1, 0, -1}; 
	    
	    
	    // n x m x 4 
	    // traverse till queue becomes empty
	    while(!q.isEmpty()) {
	        int row = q.peek().first; 
	        int col = q.peek().second; 
	        int steps = q.peek().third; 
	        q.remove(); 
	        dist[row][col] = steps; 
	        // for all 4 neighbours
	        for(int i = 0;i<4;i++) {
	            int nrow = row + delrow[i]; 
	            int ncol = col + delcol[i]; 
	            // check for valid unvisited cell
	            if(nrow >= 0 && nrow < n && ncol >= 0 && ncol < m
	            && vis[nrow][ncol] == 0)  {
	                    vis[nrow][ncol] = 1; 
    	            q.add(new Node(nrow, ncol, steps+1));  
	            } 
	            }
	        }
	    
	    // return distance matrix
	    return dist; 
    }
}
